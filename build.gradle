plugins {
    id "com.jfrog.bintray" version "1.7.3"
    id "java"
}
repositories {
    mavenCentral()
    jcenter()
}
configurations {
    provided
}

version = "0.0.1"

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    compile  "org.embulk:embulk-core:0.8.18"
    provided "org.embulk:embulk-core:0.8.18"
    // compile "YOUR_JAR_DEPENDENCY_GROUP:YOUR_JAR_DEPENDENCY_MODULE:YOUR_JAR_DEPENDENCY_VERSION"
    testCompile "junit:junit:4.+"
}

task pluginJavaProperties(dependsOn: processResources) {
    doLast {
        file("$buildDir/resources").mkdir()
        file("$buildDir/resources/main").mkdir()
        new File("$buildDir/resources/main/plugin.properties").withWriter { w ->
            Properties p = new Properties()
            p['pluginMainClass'] = "org.embulk.input.dummyjar.DummyjarInputPlugin"
            p['pluginVersion'] = version
            p.store w, null
        }
    }
}

classes {
    dependsOn pluginJavaProperties
}

// Creates a kind of a fat jar as an Embulk plugin.
// It does not use "shadowJar" since "shadowJar" brings "provided" dependencies as well.
task pluginJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': project.name,
                   'Implementation-Version': version,
                   'Embulk-Plugin-Main-Class': "org.embulk.input.dummyjar.DummyjarInputPlugin",
                   'Embulk-Plugin-Security-Policy': "runtime"
    }
    baseName = project.name + '-plugin'
    // TODO(dmikurube): Exclude "provided" dependencies.
    // from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
